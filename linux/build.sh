#!/bin/sh
CURPATH=`pwd`
OPENSSL_TAR=${CURPATH}/buildtars/openssl-1.0.1f.tar.gz
LIBCURL_TAR=${CURPATH}/buildtars/curl-7.26.0.tar.gz
OPENSSL=${CURPATH}/openssl-1.0.1f
OPENSSLTARGET=${CURPATH}/openssl
PLATFORM_BIT=`getconf LONG_BIT`
QT_CONF_PATH=${CURPATH}/qmake/${PLATFORM_BIT}bit
QT_QMAKE=${CURPATH}/qmake/${PLATFORM_BIT}bit/qmake
LIBCURL=${CURPATH}/curl
LIBCURL_BUILD=${CURPATH}/curl-7.26.0

pre_build()
{
	mkdir -p _tmp
	if [ ! -f ${QT_CONF_PATH}/qt.conf ]; then
		mv ${QT_CONF_PATH}/qt.conf _tmp
	fi
	
QT_CONF_DATA="
[Paths]
Prefix=${QT_CONF_PATH}
"
	echo "${QT_CONF_DATA}" >  ${QT_CONF_PATH}/qt.conf
	
	if [ -d ${OPENSSL} ]; then
		mv ${OPENSSL} _tmp
	fi
	if [ ! -f ${OPENSSL}/libssl.a ] && [ ! -f ${OPENSSL}/libcrypto.a ]; then
		if [ -f ${OPENSSL_TAR} ]; then
			echo "build ssl"
			tar xf ${OPENSSL_TAR} -C ${CURPATH}
			cd ${OPENSSL}
			sh ./config --prefix=${OPENSSLTARGET}
			make
			if [ $? != 0 ]; then
				echo "error out "
				exit 1
			fi
			make install
			if [ $? != 0 ]; then
				echo "error out "
				exit 1
			fi
		else
			echo "no openssl tar"
			exit 1
		fi
	fi
	####################################################################################################################################
	#build libcurl
	if [ -d ${LIBCURL} ]; then
		mv ${LIBCURL} _tmp
	fi
	if [ ! -f ${LIBCURL}/lib/libcurl.a ]; then
		if [ -f ${LIBCURL_TAR} ]; then
			echo "build libcurl"
			tar xf ${LIBCURL_TAR} -C ${CURPATH}
			cd ${LIBCURL_BUILD}
			env PKG_CONFIG_PATH=${OPENSSLTARGET}/lib/pkgconfig pkg-config --libs libssl
			sh ./configure --prefix=${LIBCURL} --disable-shared --without-libidn --with-ssl --without-libr_tmp --without-gnutls --without-nss --without-libssh2 --without-zlib --without-winidn --disable-rtsp --disable-ldap --disable-ldaps --disable-ipv6 --disable-ftp --disable-file --disable-proxy --disable-dict --disable-telnet --disable-tftp --disable-pop3 --disable-imap --disable-smtp --disable-gopher
			make
			if [ $? != 0 ]; then
				echo "make error out "
				exit 1
			fi
			make install
			if [ $? != 0 ]; then
				echo "make install error out "
				exit 1
			fi
		else
			echo "no libcurl tar"
			exit 1
		fi
	fi
    echo "end build"
  cd ${CURPATH}
  chmod +x ${QT_QMAKE}
  ${QT_QMAKE} ${CURPATH}/findmalware.pro
  gmake
  mv ./*.o _tmp
  echo "End Build"
  tar -zcvf ${PACKAGE_PATH}/findmalware.tgz ${BUILD_WORK_PATH}/findmalware
  md5sum -b ${PACKAGE_PATH}/findmalware.tgz |  awk  '{print $1}' > ${PACKAGE_PATH}/findmalware.tgz.md5
  ls -al ${BUILD_WORK_PATH}
  ls -al ${PACKAGE_PATH}
}

dep_build()
{
	pre_build
}

if [ ! -z $1 ]; then
  if [ $1 == 'clean' ]; then
    dep_clean
  elif [ $1 == 'build' ]; then
    dep_build
	exit 0
  fi
else
  dep_build
  exit 0
fi
